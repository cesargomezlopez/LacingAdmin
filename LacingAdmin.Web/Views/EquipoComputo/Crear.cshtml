
@{
    ViewBag.Title = "Crear Facultad";
}

    <div class="form-horizontal">

        <div class="form-group">
            <label for="txtNombreFacultad" class="col-sm-auto control-label">Nombre de la Facultad</label>
            <div class="col-sm-10">
                <input type="text" id="txtNombreFacultad" class="form-control" autocomplete="off" />
                <span hidden id="spanNombreFacultad" class="spanVal"></span>
            </div>
        </div>

        <div class="form-group">
            <label for="cbEstados" class="col-sm-auto control-label">Estado</label>
            <div class="col-sm-10">

                @Html.DropDownList("cbEstados", new SelectList(
                    new List<SelectListItem>
                    {
                        new SelectListItem { Value = "1", Text = "Activo"},
                        new SelectListItem { Value = "0", Text = "Desactivo"}
                    }
               , "Value", "Text"), new { @class = "form-control", @id="cbEstados" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-offset-2 col-sm-10 mt-20">
                <button onclick="postCrearFacultad()" class="btn btn-success">Guardar</button>
            </div>
        </div>
    </div>

<script>
    function validarCampos(facultad) {
        var contVal = 0;

        if (facultad.NombreFacultad == "" || facultad.NombreFacultad == null) {
            lacing.helpers.ValidationFocus("txtNombreFacultad", "spanNombreFacultad", "El campo Nombre de la Facultad es requerido");
            contVal++;
        }
        else {
            lacing.helpers.RemoveValidationFocus("txtNombreFacultad", "spanNombreFacultad");

            if (lacing.helpers.RegexTest(facultad.NombreFacultad, lacing.regexHelper.RegexSoloLetras, "txtNombreFacultad", "spanNombreFacultad", "Solo se puede ingresar letras")) contVal++;

            else {
                $.ajax({
                    type: "GET",
                    async: false,
                    url: "@Url.Action("ExisteNombreFacultad", "Facultad")",
                    data: {
                        nombreFacultad: facultad.NombreFacultad
                    },
                    success: (result) => {
                        if (result == "existe") {
                            lacing.helpers.ValidationFocus("txtNombreFacultad", "spanNombreFacultad", "El Nombre de la Facultad ingresado ya existe");
                            contVal++;
                        }
                        else {
                            lacing.helpers.RemoveValidationFocus("txtNombreFacultad", "spanNombreFacultad");
                        }
                    }
                });
            }
        }

        return contVal;
    }

    function postCrearFacultad() {
        var facultad = {
            NombreFacultad: $("#txtNombreFacultad").val(),
            Estado: $("#cbEstados").val()
        };

        if (validarCampos(facultad) == 0) {
            $.ajax({
                type: "POST",
                url: "@Url.Action("Crear", "Facultad")",
                data: {
                    "facultad": facultad
                },
                beforeSend: function () {
                    lacing.helpers.CloseModal('CrearFacultadPopup');
                    onBeginRequest();
                },
                success: (result) => {
                    onCompleteRequest();
                    refreshListaCrear();
                },
                error: (error) => {
                    Swal.fire(
                        '¡Error!',
                        'No se pudo crear la Facultad',
                        'error'
                    );
                    onCompleteRequest();
                }
            });
        }
    }

    function refreshListaCrear() {
        Swal.fire(
            '¡Listo!',
            'La Facultad ha sido creada exitosamente.',
            'success'
        );
        $.ajax({
            type: "GET",
            url: "@Url.Action("ListaFacultadesView", "Facultad", new { Area = ""})",
            beforeSend: function () {
                onBeginRequest();
            },
            success: function (result) {
                onCompleteRequest();
                $("#listadoFacultades").html(result)
            },
            error: function (error) {
                Swal.fire(
                    '¡Error!',
                    'No se pudo actualizar listado de Facultades, error: ' + error,
                    'error'
                );
                onCompleteRequest();
            }
        });        
    }
</script>




