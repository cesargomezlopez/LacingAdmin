@model LacingAdmin.Web.Models.ViewModels.DocenteViewModel

@if (Model.ListaDocentesXCarrera != null && Model.ListaDocentesXCarrera.Count > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>FACULTAD</th>
                <th>CARRERA</th>
                <th class="sorting_disabled" rowspan="1" colspan="1">ACCIONES</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ListaDocentesXCarrera)
            {
                <tr>
                    <td>@item.NombreFacultad</td>
                    <td>@item.NombreCarrera</td>
                    <td>
                        <a href="#" onclick="eliminarDocenteXCarrera(@item.IdDocenteXCarrera)" class="btn btn-sm btn-icon btn-pure btn-default on-default remove-row"><i class="icon wb-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-primary alerta" role="alert" style="width:100%; margin: 0 auto;text-align:center">
        No se obtuvieron resultados de carreras del docente.
    </div>
}

<br />

<div class="form-horizontal">
    <label class="col-sm-auto control-label" style="font-weight: 500">Agregar Carrera:</label>
    <div class="form-group">
        <label class="col-sm-auto control-label">Seleccione Facultad</label>
        <div class="col-sm-10">
            @Html.DropDownList("cbFacultadesRestantes", new SelectList(Model.ListaFacultadesRestantes, "IdFacultad", "NombreFacultad"), new { @class = "form-control", @id = "cbFacultadesRestantes" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-auto control-label">Seleccione Carrera</label>
        <div class="col-sm-10">
            @Html.DropDownList("cbCarreraRestantes", new SelectList(Model.ListaCarrerasXFacultadRestantes, "IdCarrera", "NombreCarrera"), new { @class = "form-control", @id = "cbCarreraRestantes" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <a onclick="agregarDocenteXCarrera(@Model.Docente.IdDocente)" class="btn btn-success" id="btnAgregarCarrera" style="color:white">Agregar</a>
        </div>
    </div>
</div>

<script type="text/javascript">
    function agregarDocenteXCarrera(idDocente) {
        var idCarrera = $("#cbCarreraRestantes").val();
        lacing.helpers.CloseModal('CarrerasDocentePopup');
        $.ajax({
            type: "POST",
            url: "@Url.Action("AgregarDocenteXCarrera", "Docente")",
            data: {
                "idDocente": idDocente,
                "idCarrera": idCarrera
            },
            beforeSend: function () {
                onBeginRequest();
            },
            success: function (result) {
                onCompleteRequest();
                Swal.fire(
                    '¡Listo!',
                    'La carrera ha sido asignada al docente.',
                    'success'
                );
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("ListaDocentesView", "Docente", new { Area = ""})",
                    beforeSend: function () {
                        onBeginRequest();
                    },
                    success: function (result) {
                        onCompleteRequest();
                        $("#listadoDocentes").html(result)
                    },
                    error: function (error) {
                        Swal.fire(
                            '¡Error!',
                            'No se pudo actualizar listado de Docentes, error: ' + error,
                            'error'
                        );
                        onCompleteRequest();
                    }
                });
            },
            error: function (error) {
                Swal.fire(
                    '¡Error!',
                    'No se pudo asignar carrera al docente: ' + error,
                    'error'
                );
                onCompleteRequest();
            }
        });
    }

    function eliminarDocenteXCarrera(idDocenteXCarrera) {
                lacing.helpers.CloseModal('CarrerasDocentePopup');
                Swal.fire({
                  title: '¿Estás seguro?',
                  text: "¡No podrás revertir los cambios!",
                  type: 'warning',
                  showCancelButton: true,
                  confirmButtonColor: '#3085d6',
                  cancelButtonColor: '#d33',
                  confirmButtonText: 'Sí, elimínalo'
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            type: "POST",
                            url: "@Url.Action("EliminarDocenteXCarrera", "Docente")",
                            data: {
                                "idDocenteXCarrera": idDocenteXCarrera
                            },
                            beforeSend: function () {
                                onBeginRequest();
                            },
                            success: function (result) {
                                onCompleteRequest();
                                Swal.fire(
                                    '¡Eliminado!',
                                    'La Carrera ha sido removida.',
                                    'success'
                                );
                                $.ajax({
                                    type: "GET",
                                    url: "@Url.Action("ListaDocentesView", "Docente", new { Area = ""})",
                                    beforeSend: function () {
                                        onBeginRequest();
                                    },
                                    success: function (result) {
                                        onCompleteRequest();
                                        $("#listadoDocentes").html(result)
                                    },
                                    error: function (error) {
                                        Swal.fire(
                                            '¡Error!',
                                            'No se pudo actualizar listado de Docentes, error: ' + error,
                                            'error'
                                        );
                                    }
                                });
                            },
                            error: function (error) {
                                Swal.fire(
                                    '¡Error!',
                                    'No se pudo remover la carrera, error: ' + error,
                                      'error'
                                    )
                            }
                        });
                  }
                })
            }
</script>

